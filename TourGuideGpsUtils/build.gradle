buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.6.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "jacoco"



bootJar {
    baseName = 'tourGuideGpsUtil'
    version =  '1.0.0'
}

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")

    compile(name:'gpsUtil', ext:'jar')
    
    testCompile("junit:junit")
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.1.6.RELEASE'
	
	
	
	
}

// CUSTOM DOCKER TASKS CONFIG
def dockerPort = '8081'

// CUSTOM DOCKER TASKS
task stopDockerContainer (type: Exec) {
    group = "Docker"
    description = "Stop the docker container"
    ignoreExitValue = "true"
    commandLine "docker", "stop", project.name
}

task cleanDockerContainer (type: Exec) {
	dependsOn stopDockerContainer
    group = "Docker"
    ignoreExitValue = "true"
    description = "Delete the docker container"
    commandLine "docker", "rm", project.name, "-f"
}

task stopDocker (type: Exec) {
	dependsOn cleanDockerContainer
    group = "Docker"
    ignoreExitValue = "true"
    description = "Stop and clean this docker app"
    commandLine "docker", "rmi", "tourguide/" + project.name.toLowerCase()
}

task buildDocker (type: Exec) {
    dependsOn "bootJar" 
    group = "Docker"
    description = "Build the docker image"
    commandLine "docker", "build", "--build-arg", "JAR_FILE=build/libs/*.jar", "-t", "tourguide/" + project.name.toLowerCase(), "."
}

task runDocker (type: Exec) {
    dependsOn buildDocker
    group = "Docker"
    description = "Create a container and run it"
    commandLine "docker", "run", "--name", project.name, "-d", "-p", dockerPort + ":8080", "tourguide/" + project.name.toLowerCase()
}


jacoco {
    toolVersion = "0.8.4"
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

jacocoTestCoverageVerification {
  violationRules {
    rule {
      limit {
        counter = 'LINE'
        value = 'COVEREDRATIO'
        minimum = 0.5
      }
    }
  }
}
